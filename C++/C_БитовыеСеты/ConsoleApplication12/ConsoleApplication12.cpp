// ConsoleApplication12.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <bitset>
//////////////////////////////////////////////////////////////////////////////////
//#include "Source.h"
//////////////////////////////////////////////////////////////////////////////////
// Переменные, определенные вне блока, являются глобальными переменными 
//000
int g_x; // глобальная переменная g_x
const int g_y(3); // константная глобальная переменная g_y
//001
int value(4);
//002
static int g_xx; // g_x - это статическая глобальная переменная, которую можно использовать только внутри этого файла
//003
extern double g_yy(9.8); // g_y - это внешняя глобальная переменная и её можно использовать и в других файлах программы
//004
// Определяем две глобальные переменные 
extern int g_m; // предварительное объявление g_m. Теперь g_m можно использовать в любом месте этого файла  
//005
//static 
//Статическими могут быть методы, процедуры, параметры и константы 
int g_m; // неконстантные глобальные переменные имеют внешнюю связь по умолчанию
int g_n(3); // неконстантные глобальные переменные имеют внешнюю связь по умолчанию
// g_m и g_n можно использовать в любом месте этого файла
//////////////////////////////////////////////////////////////////////////////////
// Определяем отдельное пространство имен для хранения констант
namespace Constants
{
    const double pi(3.14159);
    const double avogadro(6.0221413e23);
    const double my_gravity(9.2);
    // ... другие константы
}
//////////////////////////////////////////////////////////////////////////////////
int main()
{
    //000
    g_x = 4;
    std::cout << g_yy << "\n";
    //////////////////////////////////////////////////////////////////////////////////
    //001
    int value = 8; // эта переменная (локальная) скрывает значение глобальной переменной
    value++; // увеличивается локальная переменная value (не глобальная)
    ::value--; // уменьшается глобальная переменная value (не локальная)
    std::cout << "Global value: " << ::value << "\n";
    std::cout << "Local value: " << value << "\n";
    //////////////////////////////////////////////////////////////////////////////////
    std::bitset<8> _bitS(0b01010101);
    std::cout << _bitS <<"\n";
    std::cout << _bitS.test(0) << _bitS.test(1) << _bitS.test(2) << _bitS.test(3) << _bitS.test(4) << _bitS.test(5) << _bitS.test(6) << _bitS.test(7) << "\n";
    std::cout << _bitS.flip(0) << "\n";
    std::cout << _bitS.set(0) << "\n";
    std::cout << _bitS.set(0) << "\n";
    std::cout << "Hello World!\n";
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
